package libavutil

import (
	"ffmpeg-go/ffcommon"
	"unsafe"
)

/**
 * Context structure for the Lagged Fibonacci PRNG.
 * The exact layout, types and content of this struct may change and should
 * not be accessed directly. Only its sizeof() is guranteed to stay the same
 * to allow easy instanciation.
 */
type AVLFG struct {
	state [64]ffcommon.FUnsignedInt
	index ffcommon.FInt
}

//void av_lfg_init(AVLFG *c, unsigned int seed);
//未测试
func (c *AVLFG) AvLfgInit(seed ffcommon.FInt) (err error) {
	var t uintptr
	t, _, _ = ffcommon.GetAvutilDll().NewProc("av_lfg_init").Call(
		uintptr(seed),
	)
	if err != nil {
		//return
	}
	if t == 0 {

	}
	return
}

/**
 * Seed the state of the ALFG using binary data.
 *
 * Return value: 0 on success, negative value (AVERROR) on failure.
 */
//int av_lfg_init_from_data(AVLFG *c, const uint8_t *data, unsigned int length);
//未测试
func (c *AVLFG) AvLfgInitFromData(data *ffcommon.FUint8T, length ffcommon.FUnsignedInt) (res ffcommon.FInt, err error) {
	var t uintptr
	t, _, _ = ffcommon.GetAvutilDll().NewProc("av_lfg_init_from_data").Call(
		uintptr(unsafe.Pointer(data)),
		uintptr(length),
	)
	if err != nil {
		//return
	}
	res = ffcommon.FInt(t)
	return
}

/**
 * Get the next two numbers generated by a Box-Muller Gaussian
 * generator using the random numbers issued by lfg.
 *
 * @param out array where the two generated numbers are placed
 */
//void av_bmg_get(AVLFG *lfg, double out[2]);
//未测试
func (lfg *AVLFG) AvBmg_Get(out [2]ffcommon.FDouble) (err error) {
	var t uintptr
	t, _, _ = ffcommon.GetAvutilDll().NewProc("av_bmg_get").Call(
		uintptr(unsafe.Pointer(&out)),
	)
	if err != nil {
		//return
	}
	if t == 0 {

	}
	return
}
